version: '3'
services:
  postgres:
    image: postgres:${SOFTWARE_VERSION_TAG}
    restart: always
        #command: -c ssl=on -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${SOFTWARE_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - '172.17.0.1:5432:5432'

  pgadmin4:
    image: elestio/pgadmin:${SOFTWARE_VERSION_TAG}
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "172.17.0.1:8080:8080"
    volumes:
      - ./servers.json:/pgadmin4/servers.json

  imob:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: imob-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    depends_on:
      - redis
    networks:
      - shorty-network

  redis:
      image: redis:7.4.1-alpine
      container_name: redis
      ports:
        - "6379:6379"
      networks:
        - shorty-network      
      volumes:
        - redis-data:/data

networks:
  shorty-network:
    external: false
    driver: bridge

volumes:
  redis-data: